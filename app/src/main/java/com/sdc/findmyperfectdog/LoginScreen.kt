package com.sdc.findmyperfectdog

import androidx.compose.foundation.ExperimentalFoundationApi
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.systemBarsPadding
import androidx.compose.foundation.pager.HorizontalPager
import androidx.compose.foundation.pager.rememberPagerState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.Font
import androidx.compose.ui.text.font.FontFamily
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import com.sdc.findmyperfectdog.ui.theme.LoginDotsIndicator


val PretenderFontFamily = FontFamily(
    Font(R.font.pretendard_regular,)
    // Îã§Î•∏ ÍµµÍ∏∞Í∞Ä ÏûàÎã§Î©¥ Ïó¨Í∏∞ÏÑú Ï∂îÍ∞Ä
)


@OptIn(ExperimentalFoundationApi::class)
@Composable
fun LoginScreen(navController: NavController) {
    val pages = listOf(
        Pair(R.drawable.ic_logindog, "Find Your Dog" to "ÎãπÏã†Ïùò ÎùºÏù¥ÌîÑ Ïä§ÌÉÄÏùºÏóê Îî± ÎßûÎäî\nÍ∞ïÏïÑÏßÄÎ•º Ï∂îÏ≤úÌï¥ÎìúÎ¶ΩÎãàÎã§."),
        Pair(R.drawable.ic_adoption, "Best Companion" to "ÎãπÏã†Í≥º Ìï®ÍªòÌï† ÏôÑÎ≤ΩÌïú Î∞òÎ†§Í≤¨ÏùÑ Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî."),
        Pair(R.drawable.ic_petstore, "Premium Pet Shop" to "ÏÜåÏ§ëÌïú Î∞òÎ†§Í≤¨ÏùÑ ÏúÑÌïú ÌäπÎ≥ÑÌïú ÏáºÌïëÏùÑ ÏãúÏûëÌï¥Î≥¥ÏÑ∏Ïöî!")
    )

    val pagerState = rememberPagerState { pages.size } // Ï¥ù ÌéòÏù¥ÏßÄ Í∞úÏàò ÏÑ§Ï†ï

    Column(
        modifier = Modifier
            .systemBarsPadding()
            .fillMaxSize()
            .padding(horizontal = 32.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Spacer(modifier = Modifier.height(150.dp)) // ÏÉÅÎã® Ïó¨Î∞± Ï°∞Ï†ï

        // üîπ HorizontalPagerÎ°ú Ïù¥ÎØ∏ÏßÄ + ÌÖçÏä§Ìä∏ Ïä¨ÎùºÏù¥Îçî Ï†ÅÏö©
        HorizontalPager(
            state = pagerState,
            modifier = Modifier
                .fillMaxWidth()
                .height(380.dp) // Ïù¥ÎØ∏ÏßÄ + ÌÖçÏä§Ìä∏ ÎÜíÏù¥ Ï°∞Ï†à
        ) { page ->
            val (imageRes, textContent) = pages[page]
            val (title, subtitle) = textContent

            Column(
                horizontalAlignment = Alignment.CenterHorizontally,
                modifier = Modifier.weight(1f)
            ) {
                Image(
                    painter = painterResource(id = imageRes),
                    contentDescription = null,
                    modifier = Modifier
                        .fillMaxWidth()
                        .height(250.dp), // Ïù¥ÎØ∏ÏßÄ ÌÅ¨Í∏∞ Ï°∞Ï†ï
                )
                Spacer(modifier = Modifier.height(18.dp))

                Text(
                    text = title,
                    fontSize = 34.sp,
                    lineHeight = 44.sp,
                    letterSpacing = (-0.4).sp,
                    fontFamily = PretenderFontFamily
                )
                Spacer(modifier = Modifier.height(14.dp))
                Text(
                    text = subtitle,
                    fontSize = 16.sp,
                    lineHeight = 22.sp,
                    fontFamily = PretenderFontFamily,
                    textAlign = TextAlign.Center
                )
            }
        }
        // ÎÇ®ÏùÄ Í≥µÍ∞ÑÏùÑ Ï±ÑÏõå Î≤ÑÌäºÏùÑ ÏïÑÎûòÎ°ú Î∞ÄÏñ¥Ï§çÎãàÎã§.
        Spacer(modifier = Modifier.weight(1f))

        LoginDotsIndicator(
            totalDots = pages.size,
            selectedIndex = pagerState.currentPage
        )

        Spacer(modifier = Modifier.height(32.dp))
        Button(
            onClick = { navController.navigate("home_screen") },
            shape = RoundedCornerShape(16.dp),
            colors = ButtonDefaults.buttonColors(containerColor = Color(0xFFFCA651)),
            modifier = Modifier.fillMaxWidth().height(60.dp)
        ) {
            Text(
                text = "ÏãúÏûëÌïòÍ∏∞",
                fontSize = 26.sp,
                fontWeight = FontWeight.SemiBold,
                lineHeight = 44.sp,
                fontFamily = PretenderFontFamily
            )
        }
        Spacer(modifier = Modifier.height(30.dp))
    }
}
